{"version":3,"sources":["project/cljs/index.cljs"],"mappings":";AAOA,AAACA;AAGD,0BAAA,1BAAMC;AAAN,AAAA,0FAAA,mDAAA,mFAAA,8CAAA;;AAIA,4BAAA,5BAAMC;AAAN,AACE,wDAAA,jDAACC,oIAAWF,gCAAM,+CAAA,/CAACG;;AAErB,kCAAA,lCAAuBC;AAAvB,AACE,yGAAA,zGAACC;;AAED,OAACJ;;AAEH,sCAAA,tCAAMK;AAAN,AACE,mBAAA,ZAACC;;AAGH,gCAAA,hCAAMC;AAAN,AAGE,AAACF;;AACD,yGAAA,zGAACD;;AAID,OAACD;;AAEH,AAACI","names":["cljs.core/enable-console-print!","project.cljs.index/root","project.cljs.index/render","reagent.dom.render","shadow.dom.by_id","project.cljs.index/reload!","cljs.core.println","project.cljs.index/initialize!","js/console.log","project.cljs.index/main!"],"sourcesContent":["(ns project.cljs.index\n  (:require [shadow.dom :as dom]\n            [reagent.dom :as rd]\n            [reagent.core :as r]\n            [re-frame.core :as rf]))\n\n\n(enable-console-print!)\n\n; quick root\n(defn root []\n  [:div\n   [:p \"hello\"]])\n\n(defn render []\n  (rd/render [root] (dom/by-id \"app\")))\n\n(defn ^:dev/after-load reload! []\n  (println \"(reload!)\")\n  ;(routes/start!)\n  (render))\n\n(defn initialize! []\n  (js/console.log \"dispatch to get records etc\"))\n\n\n(defn main! []\n  ;; initialise re-frame by broadcasting event\n  ;(rf/dispatch-sync [:initialize])\n  (initialize!)\n  (println \"CLJS part initialized\")\n\n  ;; later depend on prod variable\n\n  (reload!))\n\n(main!)"]}