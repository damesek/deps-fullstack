{"version":3,"sources":["day8/re_frame_10x/panels/event/views.cljs"],"mappings":"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","names":["var_args","G__67101","day8.re-frame-10x.panels.event.views/re-seq-idx","js/Error","re","s","day8.re_frame_10x.panels.event.views.re_seq_idx","offset","temp__5808__auto__","matches","match-str","match-vals","cljs.core/vec","match-index","cljs.core/cons","cljs.core/LazySeq","post-idx","x__5130__auto__","y__5131__auto__","cljs.core.subs","day8.re-frame-10x.panels.event.views/collapse-whitespace-and-index","s'","clojure.string/replace","v","i-s","i-s'","cljs.core._EQ_","cljs.core.conj","cljs.core/count","cljs.core.nth","day8.re-frame-10x.panels.event.views/find-bounds","form-str","search-str","num-seen","vec__67110","reindex","esc-str","goog.string/regExpEscape","regex","cljs.core/re-pattern","results","and__5043__auto__","cljs.core/seq","vec__67113","vec__67116","result","_","pre-match","matched-form","index","start","stop","G__67123","clojure.string.index_of","cljs.core.pr_str","length","end","G__67124","day8.re-frame-10x.panels.event.views/code-style-factory$","style-name67125","params67126","base-style67130","key__44424__auto__","cljs.core/meta","cljs.core/first","name67129","fexpr__67132","day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.util/build-style-name","style67128","cljs.core.into","day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.runtime/compile-css","factory-name67127","day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.util/factory->name","day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.runtime/ensure-style!","day8.re-frame-10x.panels.event.views/code-style","ambiance","syntax-color-scheme","show-all-code?","day8.re-frame-10x.styles/hljs","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/px","day8.re-frame-10x.styles/gs-5","day8.re-frame-10x.panels.event.views/hljs-error-style-factory$","style-name67133","params67134","base-style67138","name67137","fexpr__67139","style67136","factory-name67135","day8.re-frame-10x.panels.event.views/hljs-error-style","day8.re-frame-10x.styles/nord11","day8.re-frame-10x.styles/nord4","day8.re-frame-10x.styles/gs-12s","day8.re-frame-10x.styles/gs-31s","day8.re-frame-10x.panels.event.views/code","scroll-pos","cljs.core.atom","day8.re_frame_10x.inlined_deps.reagent.v1v0v0.reagent.core.create_class","this","node","day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.dom/dom-node","cljs.core/reset!","cljs.core/deref","vec__67140","day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.core.subscribe","highlighted-form","start-index","end-index","before","highlight","after","re-highlight.core/hljs-compatible?","day8.re-frame-10x.components.re-com/box","event","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.core/dispatch","cljs.core/not","re-highlight.core/highlight","cljs.core/List","day8.re-frame-10x.components.re-com/v-box","day8.re-frame-10x.components.re-com/p","day8.re-frame-10x.panels.event.views/clipboard-notification-style-factory$","style-name67143","params67144","base-style67148","name67147","fexpr__67149","style67146","factory-name67145","day8.re-frame-10x.panels.event.views/clipboard-notification-style","day8.re-frame-10x.styles/nord6","day8.re-frame-10x.styles/nord12","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/ms","day8.re-frame-10x.panels.event.views/clipboard-notification","repl-msg-state","cljs.core.get","day8.re-frame-10x.panels.event.views/copy-button-style-factory$","style-name67150","params67151","base-style67155","name67154","fexpr__67156","style67153","factory-name67152","day8.re-frame-10x.panels.event.views/copy-button-style","day8.re-frame-10x.styles/nord-ghost-white","day8.re-frame-10x.styles/nord1","day8.re-frame-10x.panels.event.views/controls-style-factory$","style-name67157","params67158","base-style67162","name67161","fexpr__67163","style67160","factory-name67159","day8.re-frame-10x.panels.event.views/controls-style","day8.re-frame-10x.panels.event.views/controls","execution-order?","day8.re-frame-10x.components.re-com/h-box","day8.re-frame-10x.components.inputs/checkbox","day8.re-frame-10x.components.buttons/icon","day8.re-frame-10x.material/content-copy","day8.re-frame-10x.fx.clipboard/copy!","day8.re-frame-10x.components.re-com/gap-f","day8.re-frame-10x.styles/gs-7s","day8.re-frame-10x.components.hyperlinks/info","day8.re-frame-10x.panels.event.views/indent-block-style-factory$","style-name67164","params67165","base-style67169","name67168","fexpr__67170","style67167","factory-name67166","day8.re-frame-10x.panels.event.views/indent-block-style","first?","day8.re-frame-10x.styles/colors-2","day8.re-frame-10x.styles/nord3","day8.re-frame-10x.panels.event.views/indent-block","indent-level","iter__5523__auto__","s__67172","temp__5804__auto__","cljs.core/chunked-seq?","c__5521__auto__","size__5522__auto__","b__67174","cljs.core/chunk-buffer","i__67173","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__67171","cljs.core/chunk-rest","cljs.core/rest","cljs.core.range","day8.re-frame-10x.panels.event.views/fragment-header-style-factory$","style-name67175","params67176","base-style67180","name67179","fexpr__67181","style67178","factory-name67177","day8.re-frame-10x.panels.event.views/fragment-header-style","day8.re-frame-10x.styles/frame-1","day8.re-frame-10x.styles/gs-19","day8.re-frame-10x.styles/gs-2","day8.re-frame-10x.styles/nord10","day8.re-frame-10x.styles/gs-7","day8.re-frame-10x.styles/nord2","p__67182","map__67183","cljs.core/--destructure-map","day8.re-frame-10x.panels.event.views/fragment-header","id","form","frag","trace-id","open?-path","max-column-width","open?","cljs.core.get_in","line-str","day8.re_frame_10x.tools.pretty_print_condensed.pr_str_truncated","=>str","result-length","day8.re-frame-10x.components.buttons/expansion","day8.re-frame-10x.styles/gs-19s","day8.re-frame-10x.panels.event.views/fragment-body-style-factory$","style-name67184","params67185","base-style67189","name67188","fexpr__67190","style67187","factory-name67186","day8.re-frame-10x.panels.event.views/fragment-body-style","day8.re-frame-10x.styles/code","p__67196","map__67197","day8.re-frame-10x.panels.event.views/fragment-body","day8.re-frame-10x.components.cljs-devtools/simple-render","day8.re-frame-10x.panels.event.views/fragment-style-factory$","style-name67202","params67203","base-style67209","name67207","fexpr__67212","style67205","factory-name67204","day8.re-frame-10x.panels.event.views/fragment-style","p__67213","map__67214","day8.re-frame-10x.panels.event.views/fragment","code-open?","day8.re-frame-10x.panels.event.views/fragments-style-factory$","style-name67215","params67216","base-style67220","name67219","fexpr__67221","style67218","factory-name67217","day8.re-frame-10x.panels.event.views/fragments-style","day8.re-frame-10x.panels.event.views/fragments","fragments","max-fragments","s__67223","b__67225","i__67224","iter__67222","cljs.core.take","day8.re-frame-10x.components.re-com/label","day8.re-frame-10x.panels.event.views/instructions","day8.re-frame-10x.components.re-com/hyperlink-href","day8.re-frame-10x.panels.event.views/panel","epoch-id","exists?","cljs.core/chunk-first"],"sourcesContent":["(ns day8.re-frame-10x.panels.event.views\n  (:require-macros\n    [day8.re-frame-10x.components.re-com                          :refer [handler-fn]])\n  (:require\n    [clojure.string                                               :as string]\n    [goog.string                                                  :as gstring]\n    [re-highlight.core                                            :as re-highlight]\n    [day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units   :refer [px ms]]\n    [day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.core       :refer [defclass]]\n    [day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.core   :as r]\n    [day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.dom    :as rdom]\n    [day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.core :as rf]\n    [day8.re-frame-10x.components.buttons                         :as buttons]\n    [day8.re-frame-10x.components.cljs-devtools                   :as cljs-devtools]\n    [day8.re-frame-10x.components.hyperlinks                      :as hyperlinks]\n    [day8.re-frame-10x.components.inputs                          :as inputs]\n    [day8.re-frame-10x.components.re-com                          :as rc]\n    [day8.re-frame-10x.material                                   :as material]\n    [day8.re-frame-10x.styles                                     :as styles]\n    [day8.re-frame-10x.navigation.epochs.subs                     :as epochs.subs]\n    [day8.re-frame-10x.panels.event.events                        :as event.events]\n    [day8.re-frame-10x.panels.event.subs                          :as event.subs]\n    [day8.re-frame-10x.panels.settings.subs                       :as settings.subs]\n    [day8.re-frame-10x.fx.clipboard                               :as clipboard]\n    [day8.re-frame-10x.tools.pretty-print-condensed               :as pp]))\n\n;; Terminology:\n;; Form: a single Clojure form (may have nested children)\n;; Result: the result of execution of a single form\n;; Fragment: the combination of a form and result\n;; Listing: a block of traced Clojure code, e.g. an event handler function\n\n(defn- re-seq-idx\n  \"Like re-seq but returns matches and indices\"\n  ([re s] (re-seq-idx re s 0))\n  ([re s offset]  ;; copied from re-seq* impl https://github.com/clojure/clojurescript/blob/0efe8fede9e06b8e1aa2fcb3a1c70f66cad6392e/src/main/cljs/cljs/core.cljs#L10014\n   (when-some [matches (.exec re s)]\n     (let [match-str (aget matches 0)\n           match-vals (if (== (.-length matches) 1)\n                        match-str\n                        (vec matches))\n           match-index (.-index matches)]\n       (cons [match-vals, (+ offset match-index)]\n             (lazy-seq\n               (let [post-idx (+ (.-index matches)\n                                 (max 1 (.-length match-str)))]\n                 (when (<= post-idx (.-length s))\n                   (re-seq-idx re (subs s post-idx) (+ offset post-idx))))))))))\n\n(defn collapse-whitespace-and-index\n  \"given a string argument `s` it will return a vector of two values:\n     - a modified version of `s`, call it s'\n     - a vector of indexes, v\n   s' will be a copy of s in which all consecutive whitespace is collapsed to one whitespace\n   v  will be a vector of index for characters in s' back to the original s\n   For example:\n      (collapse-whitespace-and-index \\\"a b  c\\\")\n   will return\n       [\\\"a b c\\\" [0 1 2 3 5]]     ;; notice that the 4 is not there\n   \"\n  [s]\n  (let [s' (clojure.string/replace s #\"\\s+\" \" \") ;; generate a new string with whitespace replaced\n        v (loop [v []     ;; Build up an index between the string with and without whitespace\n                 i-s 0\n                 i-s' 0]\n            (cond\n              (= (count s') i-s')           (conj v (count s)) ;; we have reached the end of both strings\n              (= (nth s i-s) (nth s' i-s')) (recur (conj v i-s) (inc i-s) (inc i-s')) ;; when we have a match save the index\n              :else                         (recur v (inc i-s) i-s')))]    ;; no match (whitespace) increment the index on the orignal string\n    [s' v]))\n\n(defn find-bounds\n  \"Try and find the bounds of the form we are searching for. Uses some heuristics to\n  try and avoid matching partial forms, e.g. 'default-|weeks| for the form 'weeks.\"\n  [form-str search-str num-seen]\n  (if (nil? search-str)\n    [0 0]  ;; on mouse out etc\n    (let [[form-str reindex]   (collapse-whitespace-and-index form-str) ;; match without whitespace\n          esc-str    (gstring/regExpEscape search-str)\n          regex      (str \"(\\\\s|\\\\(|\\\\[|\\\\{)\" \"(\" esc-str \")(\\\\s|\\\\)|\\\\]|\\\\})\")\n          re         (re-pattern regex)\n          results    (re-seq-idx re form-str)]\n      ;; (js/console.log \"FIND-BOUNDS\" form-str  regex reindex results)\n      (if (and search-str num-seen (seq results) (>= (count results)  num-seen))\n        (let [result                              (nth results (dec num-seen))\n              [[_ pre-match matched-form] index]  result\n              index                               (+ index (count pre-match))\n              start                               (nth reindex index)\n              stop                                (nth reindex (+ index (count matched-form)))]\n          [start stop])\n        ;; If the regex fails, fall back to string index just in case.\n        (let [start  (some->> form-str\n                              (string/index-of (pr-str search-str))\n                              (nth reindex))\n              length (if (some? start)\n                       (count (pr-str search-str))\n                       1)\n              end    (some->> start\n                              (+ length)\n                              (nth reindex))]\n          [start end])))))\n\n(defclass code-style\n  [ambiance syntax-color-scheme show-all-code?]\n  {:composes      (styles/hljs ambiance syntax-color-scheme)\n   :max-height    (when-not show-all-code? (px (* 10 17)))  ;; Add scrollbar after 10 lines\n   :padding       styles/gs-5\n   :overflow      :auto\n   :white-space   :pre\n   :margin-right  styles/gs-5}) ;; TODO: This is a quick fix for issue #270\n\n(defclass hljs-error-style\n  [ambiance syntax-color-scheme]\n  {:background-color styles/nord11\n   :color styles/nord4\n   :border-radius \"3px\"\n   :padding styles/gs-12s\n   :margin-right styles/gs-31s}\n  [:p\n   {:margin-top \"0px\"}])\n\n(defn code\n  []\n  (let [scroll-pos (atom {:top 0 :left 0})]\n    (r/create-class\n      {:display-name \"code\"\n\n       :get-snapshot-before-update\n                     (fn code-get-snapshot-before-update\n                       [this _ _]\n                       (let [node (rdom/dom-node this)]\n                         (reset! scroll-pos {:top (.-scrollTop node) :left (.-scrollLeft node)})))\n\n       :component-did-update\n                     (fn code-component-did-update\n                       [this]\n                       (let [node (rdom/dom-node this)]\n                         (set! (.-scrollTop node) (:top @scroll-pos))\n                         (set! (.-scrollLeft node) (:left @scroll-pos))))\n\n       :reagent-render\n                     (fn\n                       []\n                       (let [ambiance            @(rf/subscribe [::settings.subs/ambiance])\n                             syntax-color-scheme @(rf/subscribe [::settings.subs/syntax-color-scheme])\n                             highlighted-form    @(rf/subscribe [::event.subs/highlighted-form])\n                             form-str            @(rf/subscribe [::event.subs/zprint-form-for-epoch])\n                             show-all-code?      @(rf/subscribe [::event.subs/show-all-code?])\n                             [start-index end-index] (find-bounds form-str (:form highlighted-form) (:num-seen highlighted-form))\n                             before              (subs form-str 0 start-index)\n                             highlight           (subs form-str start-index end-index)\n                             after               (subs form-str end-index)]\n                         ; DC: We get lots of React errors if we don't force a creation of a new element when the highlight changes. Not really sure why...\n                         ;; Possibly relevant? https://stackoverflow.com/questions/21926083/failed-to-execute-removechild-on-node\n                         ^{:key (gensym)}\n                         ;; At some point around March 2021 Highlight.js changed their API significantly (e.g. highlightBlock -> highlightElement).\n                         ;; re-highlight, the wrapper around Highlight.js, depends on a modern version of Highlight.js with highlightElement.\n                         ;; Prior to the below check being added, a transitive dependency or direct project dependency that overrides\n                         ;; the version of Highlight.js with an older release than that reqeusted by re-highlight would cause 10x to crash.\n                         ;; Therefore, we added this check to ensure that prior to attempting to render source code with Highlight.js we check\n                         ;; that a compatible dependency has been loaded.\n                         (if (re-highlight/hljs-compatible?)\n                           [rc/box\n                            :class (code-style ambiance syntax-color-scheme show-all-code?)\n                            :attr  {:on-double-click (handler-fn (rf/dispatch [::event.events/set-show-all-code? (not show-all-code?)]))}\n                            :child (if (some? highlighted-form)\n                                     [re-highlight/highlight {:language \"clojure\"}\n                                      (list ^{:key \"before\"} before\n                                            ^{:key \"hl\"} [:span.code-listing--highlighted highlight]\n                                            ^{:key \"after\"} after)]\n                                     [re-highlight/highlight {:language \"clojure\"}\n                                      form-str])]\n                           [rc/v-box\n                            :class (hljs-error-style ambiance syntax-color-scheme)\n                            :children [[rc/p\n                                        \"re-frame-10x found a version mismatch between the Highlight.js loaded and the one that it expects to use.\"]\n                                       [rc/p\n                                        \"As a result, it can't display the source code for this function.\"]\n                                       [rc/p\n                                        \"To fix this, please examine this application's dependency tree to see how an old version of Highlight.js is being pulled in (probably transitively) and perhaps then use an appropriate exclusion for that dependency.\"]]])))})))\n\n\n(defclass clipboard-notification-style\n  [_]\n  {:opacity            0\n   :color              styles/nord6\n   :background-color   styles/nord12\n   :padding            [[0 styles/gs-5]]\n   :white-space        :nowrap\n   :overflow           :hidden\n   :animation-duration (ms 5000)\n   :animation-name     :fade-clipboard-msg-re-frame-10x})\n\n(defn clipboard-notification\n  []\n  (let [ambiance       @(rf/subscribe [::settings.subs/ambiance])\n        repl-msg-state @(rf/subscribe [::event.subs/repl-msg-state])]\n    (when (get #{:running :re-running} repl-msg-state)\n      [:div\n       {:class            (clipboard-notification-style ambiance)\n        :on-animation-end #(rf/dispatch [::event.events/repl-msg-state :end])}\n       \"Clipboard now contains text for pasting into your REPL\"])))\n\n(defclass copy-button-style\n  [ambiance]\n  {:background-color (if (= :bright ambiance) styles/nord-ghost-white styles/nord1)\n   :border-top :none\n   :border-bottom :none\n   :border-right :none})\n\n(defclass controls-style\n  [_]\n  {:margin-right styles/gs-5})\n\n(defn controls\n  []\n  (let [ambiance         @(rf/subscribe [::settings.subs/ambiance])\n        execution-order? @(rf/subscribe [::event.subs/execution-order?])]\n    [rc/h-box\n     :class    (controls-style ambiance)\n     :align    :center\n     :children\n     [[inputs/checkbox\n       {:model     execution-order?\n        :on-change (handler-fn (rf/dispatch [::event.events/set-execution-order (not execution-order?)]))\n        :label     \"show trace in execution order\"}]\n      [rc/box\n       :size  \"1\"\n       :child \"\"]\n      [clipboard-notification]\n      [rc/box\n       :size  \"1\"\n       :child \"\"]\n      [buttons/icon\n       {:icon     [material/content-copy]\n        :label    \"requires\"\n        :title    \"Copy to the clipboard, the require form to set things up for the \\\"repl\\\" links below\"\n        ;; Doing this in a list would be nicer, but doesn't let us use ' as it will be expanded before we can create the string.\n        :on-click #(do (clipboard/copy! \"(require '[day8.re-frame-10x])\")\n                       (rf/dispatch [::event.events/repl-msg-state :start]))}]\n      [rc/gap-f :size styles/gs-7s]\n      [hyperlinks/info \"https://github.com/day8/re-frame-10x/blob/master/docs/HyperlinkedInformation/UsingTheRepl.md\"]]]))\n\n(defclass indent-block-style\n  [ambiance first?]\n  {:composes    (styles/colors-2 ambiance)\n   :border-left [[(px 1) :solid (if (= :bright ambiance) styles/nord4 styles/nord3)]]\n   :border-top  (when first? [[(px 1) :solid (if (= :bright ambiance) styles/nord4 styles/nord3)]])})\n\n(defn indent-block\n  [indent-level first?]\n  (let [ambiance @(rf/subscribe [::settings.subs/ambiance])]\n    [rc/h-box\n     :children\n     (into []\n           (for [_ (range indent-level)]\n             [rc/box\n              :width styles/gs-12s\n              :class (indent-block-style ambiance first?)\n              :child \"\"]))]))\n\n(defclass fragment-header-style\n  [ambiance first?]\n  {:composes   (styles/frame-1 ambiance)\n   :height     styles/gs-19\n   :margin-top (when-not first? (px -1))}\n  [:.code\n   {:margin-left styles/gs-2\n    :white-space :nowrap}]\n  [:.result\n   {:color       styles/nord10\n    :flex        \"1\"\n    :margin-left styles/gs-7\n    :overflow    :hidden\n    :white-space :nowrap\n    :visibility  :hidden}]\n  [:&:hover\n   {:background-color (if (= :bright ambiance) styles/nord6 styles/nord2)}\n   [:.result\n    {:visibility :visible}]])\n\n(defn fragment-header\n  [{:keys [id form result] :as frag}]\n  (let [ambiance         @(rf/subscribe [::settings.subs/ambiance])\n        trace-id         @(rf/subscribe [::event.subs/trace-id-for-epoch])\n        open?-path       [@(rf/subscribe [::epochs.subs/selected-epoch-id]) trace-id id]\n        max-column-width @(rf/subscribe [::event.subs/max-column-width])\n        open?            (get-in @(rf/subscribe [::event.subs/code-open?]) open?-path)\n        line-str         (pp/pr-str-truncated max-column-width form)\n        =>str            \"=> \"\n        result-length    (- max-column-width (count =>str) (count line-str))\n        first?           (zero? id)]\n    [rc/h-box\n     :class    (fragment-header-style ambiance first?)\n     :size     \"1\"\n     :align    :center\n     :children\n     [[rc/box\n       :attr  {:on-click (handler-fn (rf/dispatch [::event.events/set-code-visibility open?-path (not open?)]))}\n       :child\n       [buttons/expansion\n        {:open? open?\n         :size  styles/gs-19s}]]\n      [rc/h-box\n       :size     \"1\"\n       :children\n       [[rc/box\n         :class \"code\"\n         :child\n         [:code line-str]]\n        [rc/box\n         :class \"result\"\n         :child\n         [:code =>str (when (pos? result-length)\n                        (pp/pr-str-truncated result-length result))]]]]\n      [rc/box\n       :width styles/gs-19s\n       :child\n       [buttons/icon\n        {:class    (copy-button-style ambiance)\n         :icon     [material/content-copy {:size \"14px\"}]\n         :title    \"Copy to the clipboard, an expression that will return this form's value in the cljs repl\"\n         :on-click (handler-fn (do (clipboard/copy! (pr-str (list 'day8.re-frame-10x/traced-result trace-id frag)))\n                                   (rf/dispatch [::event.events/repl-msg-state :start])))}]]]]))\n\n(defclass fragment-body-style\n  [ambiance syntax-color-scheme]\n  {:composes   (styles/code ambiance syntax-color-scheme)\n   :overflow-x :auto\n   :overflow-y :hidden\n   :padding    styles/gs-5})\n\n(defn fragment-body\n  [{:keys [id result]}]\n  (let [ambiance            @(rf/subscribe [::settings.subs/ambiance])\n        syntax-color-scheme @(rf/subscribe [::settings.subs/syntax-color-scheme])\n        trace-id            @(rf/subscribe [::event.subs/trace-id-for-epoch])]\n    [rc/box\n     :size  \"1\"\n     :class (fragment-body-style ambiance syntax-color-scheme)\n     :child\n     [cljs-devtools/simple-render\n      result\n      [@(rf/subscribe [::epochs.subs/selected-epoch-id]) trace-id id]]]))\n\n(defclass fragment-style\n  [_]\n  {})\n\n(defn fragment\n  [{:keys [id indent-level] :as frag}]\n  (let [ambiance   @(rf/subscribe [::settings.subs/ambiance])\n        code-open? @(rf/subscribe [::event.subs/code-open?])\n        trace-id   @(rf/subscribe [::event.subs/trace-id-for-epoch])\n        first?     (zero? id)]\n    [rc/v-box\n     :class (fragment-style ambiance)\n     :attr  {:on-mouse-enter (handler-fn (rf/dispatch [::event.events/hover-form frag]))\n             :on-mouse-leave (handler-fn (rf/dispatch [::event.events/exit-hover-form frag]))}\n     :children\n     [[rc/h-box\n       :children\n       [[indent-block indent-level first?]\n        [fragment-header frag]]]\n      (when (get-in code-open? [@(rf/subscribe [::epochs.subs/selected-epoch-id]) trace-id id])\n        [rc/h-box\n         :children\n         [[indent-block indent-level false]\n          [fragment-body frag]]])]]))\n\n(defclass fragments-style\n  [_]\n  {:overflow-y :auto\n   :margin-right styles/gs-5})\n\n(defn fragments\n  []\n  (let [ambiance      @(rf/subscribe [::settings.subs/ambiance])\n        fragments     @(rf/subscribe [::event.subs/fragments-for-epoch])\n        max-fragments 50]\n    [rc/v-box\n     :size     \"1\"\n     :class    (fragments-style ambiance)\n     :children\n     [(into [:<>]\n            (for [frag (take max-fragments fragments)]\n              [fragment frag]))\n      (when (> (count fragments) max-fragments)\n        [rc/label\n         :label (str \"(only showing first \" max-fragments \" of \" (count fragments) \" traces)\")])]]))\n\n(defn instructions\n  []\n  [rc/v-box\n   :children\n   [[rc/p \"Code trace is not available for this event\"]\n    [:br]\n    [rc/hyperlink-href\n     :label  \"Instructions for enabling Event Code Tracing\"\n     :attr   {:rel \"noopener noreferrer\"}\n     :target \"_blank\"\n     :href   \"https://github.com/day8/re-frame-10x/blob/master/docs/HyperlinkedInformation/EventCodeTracing.md\"]]])\n\n(defn panel\n  []\n  (let [epoch-id @(rf/subscribe [::epochs.subs/selected-epoch-id])\n        exists?  @(rf/subscribe [::event.subs/code-for-epoch-exists?])]\n    ;; Create a new id on each panel because Reagent can throw an exception if\n    ;; the data provided in successive renders is sufficiently different.\n    ^{:key epoch-id}\n    [rc/v-box\n     :size     \"1\"\n     :gap      styles/gs-19s\n     :children\n     (if-not exists?\n       [[instructions]]\n       [[code]\n        [controls]\n        [fragments]])]))\n\n"]}